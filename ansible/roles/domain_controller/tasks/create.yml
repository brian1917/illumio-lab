---
- name: Install Active Directory
  win_feature:
    name: AD-Domain-Services
    include_management_tools: yes
    include_sub_features: yes
    state: present
  register: ad

- name: Reboot server
  win_reboot:
    pre_reboot_delay: 15
  when: ad.changed

- name: Install domain
  run_once: true
  win_domain:
    dns_domain_name: "poc.segmentationpov.com"
    safe_mode_password: "{{ windows_admin_pwd }}"
  register: domaincreate
  ignore_errors: true # Running this step when domain already installed throws errors. If domain does not create other steps will error so ok to ignore here.
  tags:
    - install-domain

- name: Reboot server
  win_reboot:
    pre_reboot_delay: 15
  when: domaincreate.changed
  register: dccreatereboot

- name: Setup Ansible Facts with_inventory_hostnames
  run_once: true
  setup:
    gather_subset: "all"
  delegate_to: "{{ item }}"
  delegate_facts: True
  loop: "{{ query('inventory_hostnames', 'all:!dc:!member:!ansible') }}"
  retries: 10
  delay: 30

- name: Add DNS Records of other workloads
  run_once: true
  win_dns_record:
    name: "{{ hostvars[item].inventory_hostname_short }}"
    value: "{{ hostvars[item]['ansible_all_ipv4_addresses'][0] }}"
    type: A
    zone: "poc.segmentationpov.com"
    state: present
  loop: "{{ query('inventory_hostnames', 'all:!dc:!member:!ansible') }}"

- name: Add DNS Records for PCE Public IP
  run_once: true
  win_dns_record:
    name: "{{ pce.org_name }}"
    value: "{{ lookup('dig', '{{ pce.org_name }}.{{ pce.domain_name }}')}}"
    type: A
    zone: "poc.segmentationpov.com"
    state: present

- name: Create AD groups (will fail many times until AD Web services are reachable)
  run_once: true
  retries: 30
  delay: 30
  until: createADGroup is not failed
  win_domain_group:
    name: "{{ item }}"
    scope: global
  with_items:
    - Sales
    - HR
  register: createADGroup
  tags:
    - groups

- name: Add AD users
  run_once: true
  win_domain_user:
    name: "{{ item.name }}"
    firstname: "{{ item.firstname }}"
    surname: "{{ item.surname }}"
    company: Dunder Mifflin
    password: "{{ windows_admin_pwd }}"
    password_never_expires: yes
    state: present
    groups: "{{ item.groups }}"
    street: 1725 Slough Avenue
    city: Scranton
    state_province: PA
    postal_code: "18503"
    country: US
  with_items:
    - {
        name: toby,
        firstname: Toby,
        surname: Flenderson,
        groups: "HR,Remote Desktop Users",
      }
    - {
        name: michael,
        firstname: Michael,
        surname: Scott,
        groups: "Sales,Remote Desktop Users",
      }
    - {
        name: brian,
        firstname: Brian,
        surname: Pitta,
        groups: "Administrators",
      }
  tags:
    - users

- name: Update RDP groups
  win_shell: net localgroup "Remote Desktop Users" "Domain Users" /add >> C:\RDP.txt
  args:
    executable: cmd.exe
    creates: C:\RDP.txt

- name: Copy AD Sync Script
  win_copy:
    src: ../files/PCE-AD_Sync_v2.4.3.ps1
    dest: C:\PCE-AD_Sync_v2.4.3.ps1
  tags:
    - ADSync

- name: Update PCE with AD groups
  win_shell: powershell C:\PCE-AD_Sync_v2.4.3.ps1 /sync /url https://{{ pce.org_name }}.{{ pce.domain_name }}:{{ pce.front_end_https_port }} /username "{{ pce.user_email }}" /password "{{ pce.user_pwd }}"
  args:
    executable: cmd.exe
    chdir: C:\
  tags:
    - ADSync

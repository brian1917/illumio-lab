---
- name: Create bin and vensim directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    recurse: yes
    owner: centos
    group: centos
  with_items: ["/home/centos/bin", "/home/centos/vensim"]

- name: Move vensim and workloader to bin directory
  copy:
    src: "{{ item }}"
    dest: "/home/centos/bin/{{ item }}"
    owner: centos
    group: centos
    mode: "0100"
  with_items: ["vensim", "workloader"]

- name: Move vensim files to vensim directory
  copy:
    src: "{{ item }}"
    dest: "/home/centos/vensim/{{ item }}"
    owner: centos
    group: centos
    mode: "0700"
  with_items: ["iplists.csv", "traffic.csv", "wklds.csv", "agents.json"]

- name: Login to workloader
  become: yes
  become_user: centos
  shell:
    cmd: PCE_NAME=default PCE_FQDN={{ org }}.poc.segmentationpov.com PCE_PORT=8443 PCE_USER=brian.pitta@illumio.com PCE_PWD=Illumio123 PCE_DISABLE_TLS=false /home/centos/bin/workloader pce-add
  args:
    chdir: /home/centos/vensim
    creates: pce.yaml

- name: Download default pairing key
  become: yes
  become_user: centos
  shell:
    cmd: /home/centos/bin/workloader get-pk -f pk
  args:
    chdir: /home/centos/vensim
    creates: /home/centos/vensim/pk

- name: Register pairing key
  become: yes
  become_user: centos
  command: "cat /home/centos/vensim/pk"
  register: activation_code
  
- name: Activate VENs with vensim
  become: yes
  become_user: centos
  shell:
    cmd: /home/centos/bin/vensim activate -w agents.json -m {{ org }}.poc.segmentationpov.com:8443 -a {{ activation_code.stdout }}
  args:
    chdir: /home/centos/vensim
    creates: /home/centos/vensim/agents

- name: Import workload labels and unmanaged workloads
  become: yes
  become_user: centos
  shell:
    cmd: /home/centos/bin/workloader wkld-import wklds.csv --update-pce --no-prompt --umwl
  args:
    chdir: /home/centos/vensim

- name: Import IP lists
  become: yes
  become_user: centos
  shell:
    cmd: /home/centos/bin/workloader ipl-import iplists.csv --update-pce --no-prompt --provision
  args:
    chdir: /home/centos/vensim

- name: Import traffic
  become: yes
  become_user: centos
  shell:
    cmd: /home/centos/bin/vensim traffic -w agents.json -m {{ org }}.poc.segmentationpov.com:8443 -t traffic.csv -d "2022-07-01;yesterday"
  args:
    chdir: /home/centos/vensim
    creates: /home/centos/vensim/flows

- name: Creates PATH entry
  become: true
  become_user: centos
  ansible.builtin.cron:
    name: PATH
    env: yes
    job: /usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/centos/.local/bin:/home/centos/bin:/home/centos/bin/

- name: Set crontab to remove vensim log every hour
  become: true
  become_user: centos
  ansible.builtin.cron:
    name: "Remove vensim log every hour"
    hour: "0"
    job: "rm /home/centos/vensim/vensim.log"

- name: Set crontab to run traffic update every 10 minutes
  become: true
  become_user: centos
  ansible.builtin.cron:
    name: "Run traffic update every 10 minutes"
    minute: "*/10"
    job: "cd /home/centos/vensim && vensim traffic -m {{ org }}.poc.segmentationpov.com:8443 -w /home/centos/vensim/agents.json -t /home/centos/vensim/traffic.csv -d today >/dev/null 2>&1"

- name: Set crontab to send heartbeat every 5 minutes
  become: true
  become_user: centos
  ansible.builtin.cron:
    name: "Send heartbeat every 5 minutes"
    minute: "*/5"
    job: "cd /home/centos/vensim && vensim heartbeat -m {{ org }}.poc.segmentationpov.com:8443 -w /home/centos/vensim/agents.json >/dev/null 2>&1"

- name: Set crontab to get policy every 15 seconds
  become: true
  become_user: centos
  ansible.builtin.cron:
    name: "Get policy every 15 seconds by sleeping {{ item }} seconds on the minute"
    job: "cd /home/centos/vensim && sleep {{ item }} && vensim get-policy -m {{ org }}.poc.segmentationpov.com:8443 -w /home/centos/vensim/agents.json >/dev/null 2>&1"
  with_items: ["0", "15", "30", "45"]
